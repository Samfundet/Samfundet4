openapi: 3.0.3
info:
  title: Samfundet4 API
  version: 1.0.0
  description: Samfundet4 is the new webpage of Studentersamfundet in Trondhjem
paths:
  /active-recruitment-positions/:
    get:
      operationId: active_recruitment_positions_list
      tags:
      - active-recruitment-positions
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecruitmentPositionForApplicant'
          description: ''
  /active-recruitments/:
    get:
      operationId: active_recruitments_list
      tags:
      - active-recruitments
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recruitment'
          description: ''
  /api/blog/:
    get:
      operationId: api_blog_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BlogPost'
          description: ''
    post:
      operationId: api_blog_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogPost'
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
  /api/blog/{id}/:
    get:
      operationId: api_blog_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Blog post.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
    put:
      operationId: api_blog_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Blog post.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogPost'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
    patch:
      operationId: api_blog_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Blog post.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlogPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlogPost'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
    delete:
      operationId: api_blog_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Blog post.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/booking/:
    get:
      operationId: api_booking_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'
          description: ''
    post:
      operationId: api_booking_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Booking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Booking'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
  /api/booking/{id}/:
    get:
      operationId: api_booking_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Booking.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
    put:
      operationId: api_booking_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Booking.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Booking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Booking'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
    patch:
      operationId: api_booking_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Booking.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBooking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBooking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBooking'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
    delete:
      operationId: api_booking_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Booking.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/closed/:
    get:
      operationId: api_closed_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClosedPeriod'
          description: ''
    post:
      operationId: api_closed_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClosedPeriod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClosedPeriod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClosedPeriod'
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClosedPeriod'
          description: ''
  /api/closed/{id}/:
    get:
      operationId: api_closed_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ClosedPeriod.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClosedPeriod'
          description: ''
    put:
      operationId: api_closed_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ClosedPeriod.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClosedPeriod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClosedPeriod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClosedPeriod'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClosedPeriod'
          description: ''
    patch:
      operationId: api_closed_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ClosedPeriod.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClosedPeriod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClosedPeriod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClosedPeriod'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClosedPeriod'
          description: ''
    delete:
      operationId: api_closed_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ClosedPeriod.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/eventgroups/:
    get:
      operationId: api_eventgroups_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventGroup'
          description: ''
    post:
      operationId: api_eventgroups_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventGroup'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventGroup'
          description: ''
  /api/eventgroups/{id}/:
    get:
      operationId: api_eventgroups_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this EventGroup.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventGroup'
          description: ''
    put:
      operationId: api_eventgroups_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this EventGroup.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventGroup'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventGroup'
          description: ''
    patch:
      operationId: api_eventgroups_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this EventGroup.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventGroup'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventGroup'
          description: ''
    delete:
      operationId: api_eventgroups_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this EventGroup.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/events/:
    get:
      operationId: api_events_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
          description: ''
    post:
      operationId: api_events_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/events/{id}/:
    get:
      operationId: api_events_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    put:
      operationId: api_events_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    patch:
      operationId: api_events_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    delete:
      operationId: api_events_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/food-category/:
    get:
      operationId: api_food_category_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FoodCategory'
          description: ''
    post:
      operationId: api_food_category_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FoodCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FoodCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FoodCategory'
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodCategory'
          description: ''
  /api/food-category/{id}/:
    get:
      operationId: api_food_category_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this FoodCategory.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodCategory'
          description: ''
    put:
      operationId: api_food_category_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this FoodCategory.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FoodCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FoodCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FoodCategory'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodCategory'
          description: ''
    patch:
      operationId: api_food_category_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this FoodCategory.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFoodCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFoodCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFoodCategory'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodCategory'
          description: ''
    delete:
      operationId: api_food_category_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this FoodCategory.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/food-preference/:
    get:
      operationId: api_food_preference_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FoodPreference'
          description: ''
    post:
      operationId: api_food_preference_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FoodPreference'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FoodPreference'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FoodPreference'
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodPreference'
          description: ''
  /api/food-preference/{id}/:
    get:
      operationId: api_food_preference_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this FoodPreference.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodPreference'
          description: ''
    put:
      operationId: api_food_preference_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this FoodPreference.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FoodPreference'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FoodPreference'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FoodPreference'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodPreference'
          description: ''
    patch:
      operationId: api_food_preference_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this FoodPreference.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFoodPreference'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFoodPreference'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFoodPreference'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodPreference'
          description: ''
    delete:
      operationId: api_food_preference_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this FoodPreference.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/gangs/:
    get:
      operationId: api_gangs_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gang'
          description: ''
    post:
      operationId: api_gangs_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gang'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Gang'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Gang'
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gang'
          description: ''
  /api/gangs/{id}/:
    get:
      operationId: api_gangs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Gang.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gang'
          description: ''
    put:
      operationId: api_gangs_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Gang.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gang'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Gang'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Gang'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gang'
          description: ''
    patch:
      operationId: api_gangs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Gang.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGang'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGang'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGang'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gang'
          description: ''
    delete:
      operationId: api_gangs_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Gang.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/gangsorganized/:
    get:
      operationId: api_gangsorganized_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GangType'
          description: ''
    post:
      operationId: api_gangsorganized_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GangType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GangType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GangType'
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GangType'
          description: ''
  /api/gangsorganized/{id}/:
    get:
      operationId: api_gangsorganized_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this GangType.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GangType'
          description: ''
    put:
      operationId: api_gangsorganized_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this GangType.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GangType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GangType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GangType'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GangType'
          description: ''
    patch:
      operationId: api_gangsorganized_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this GangType.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGangType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGangType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGangType'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GangType'
          description: ''
    delete:
      operationId: api_gangsorganized_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this GangType.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/images/:
    get:
      operationId: api_images_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image'
          description: ''
    post:
      operationId: api_images_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
  /api/images/{id}/:
    get:
      operationId: api_images_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Image.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
    put:
      operationId: api_images_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Image.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
    patch:
      operationId: api_images_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Image.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedImage'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
    delete:
      operationId: api_images_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Image.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/infobox/:
    get:
      operationId: api_infobox_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Infobox'
          description: ''
    post:
      operationId: api_infobox_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Infobox'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Infobox'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Infobox'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Infobox'
          description: ''
  /api/infobox/{id}/:
    get:
      operationId: api_infobox_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Infoboks.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Infobox'
          description: ''
    put:
      operationId: api_infobox_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Infoboks.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Infobox'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Infobox'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Infobox'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Infobox'
          description: ''
    patch:
      operationId: api_infobox_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Infoboks.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInfobox'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInfobox'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInfobox'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Infobox'
          description: ''
    delete:
      operationId: api_infobox_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Infoboks.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/information/:
    get:
      operationId: api_information_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InformationPage'
          description: ''
    post:
      operationId: api_information_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InformationPage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InformationPage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InformationPage'
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformationPage'
          description: ''
  /api/information/{slug_field}/:
    get:
      operationId: api_information_retrieve
      parameters:
      - in: path
        name: slug_field
        schema:
          type: string
          description: Primary key, this field will identify the object and be used
            in the URL.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformationPage'
          description: ''
    put:
      operationId: api_information_update
      parameters:
      - in: path
        name: slug_field
        schema:
          type: string
          description: Primary key, this field will identify the object and be used
            in the URL.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InformationPage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InformationPage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InformationPage'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformationPage'
          description: ''
    patch:
      operationId: api_information_partial_update
      parameters:
      - in: path
        name: slug_field
        schema:
          type: string
          description: Primary key, this field will identify the object and be used
            in the URL.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInformationPage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInformationPage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInformationPage'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformationPage'
          description: ''
    delete:
      operationId: api_information_destroy
      parameters:
      - in: path
        name: slug_field
        schema:
          type: string
          description: Primary key, this field will identify the object and be used
            in the URL.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/interview/:
    get:
      operationId: api_interview_list
      tags:
      - api
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interview'
          description: ''
    post:
      operationId: api_interview_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Interview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Interview'
      security:
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interview'
          description: ''
  /api/interview-rooms/:
    get:
      operationId: api_interview_rooms_list
      tags:
      - api
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InterviewRoom'
          description: ''
    post:
      operationId: api_interview_rooms_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterviewRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InterviewRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InterviewRoom'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewRoom'
          description: ''
  /api/interview-rooms/{id}/:
    get:
      operationId: api_interview_rooms_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this interview room.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewRoom'
          description: ''
    put:
      operationId: api_interview_rooms_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this interview room.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterviewRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InterviewRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InterviewRoom'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewRoom'
          description: ''
    patch:
      operationId: api_interview_rooms_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this interview room.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInterviewRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInterviewRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInterviewRoom'
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewRoom'
          description: ''
    delete:
      operationId: api_interview_rooms_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this interview room.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/interview/{id}/:
    get:
      operationId: api_interview_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this interview.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interview'
          description: ''
    put:
      operationId: api_interview_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this interview.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Interview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Interview'
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interview'
          description: ''
    patch:
      operationId: api_interview_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this interview.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInterview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInterview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInterview'
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interview'
          description: ''
    delete:
      operationId: api_interview_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this interview.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/key-value/:
    get:
      operationId: api_key_value_list
      description: All CRUD operations can be performed in the admin panel instead.
      tags:
      - api
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KeyValue'
          description: ''
  /api/key-value/{key}/:
    get:
      operationId: api_key_value_retrieve
      description: All CRUD operations can be performed in the admin panel instead.
      parameters:
      - in: path
        name: key
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyValue'
          description: ''
  /api/menu/:
    get:
      operationId: api_menu_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu'
          description: ''
    post:
      operationId: api_menu_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Menu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Menu'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
  /api/menu-items/:
    get:
      operationId: api_menu_items_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem'
          description: ''
    post:
      operationId: api_menu_items_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuItem'
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
  /api/menu-items/{id}/:
    get:
      operationId: api_menu_items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this MenuItem.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
    put:
      operationId: api_menu_items_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this MenuItem.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuItem'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
    patch:
      operationId: api_menu_items_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this MenuItem.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMenuItem'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
    delete:
      operationId: api_menu_items_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this MenuItem.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/menu/{id}/:
    get:
      operationId: api_menu_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Menu.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
    put:
      operationId: api_menu_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Menu.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Menu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Menu'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
    patch:
      operationId: api_menu_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Menu.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMenu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMenu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMenu'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
    delete:
      operationId: api_menu_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Menu.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/merch/:
    get:
      operationId: api_merch_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Merch'
          description: ''
    post:
      operationId: api_merch_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Merch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Merch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Merch'
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merch'
          description: ''
  /api/merch/{id}/:
    get:
      operationId: api_merch_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Merch.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merch'
          description: ''
    put:
      operationId: api_merch_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Merch.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Merch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Merch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Merch'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merch'
          description: ''
    patch:
      operationId: api_merch_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Merch.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMerch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMerch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMerch'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merch'
          description: ''
    delete:
      operationId: api_merch_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Merch.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/organizations/:
    get:
      operationId: api_organizations_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
          description: ''
    post:
      operationId: api_organizations_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
  /api/organizations/{id}/:
    get:
      operationId: api_organizations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Organization.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    put:
      operationId: api_organizations_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Organization.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    patch:
      operationId: api_organizations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Organization.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    delete:
      operationId: api_organizations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Organization.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/organizations/{id}/gangs/:
    get:
      operationId: api_organizations_gangs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Organization.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
  /api/profile/:
    get:
      operationId: api_profile_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
          description: ''
    post:
      operationId: api_profile_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /api/profile/{id}/:
    get:
      operationId: api_profile_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Profile.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    put:
      operationId: api_profile_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    patch:
      operationId: api_profile_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    delete:
      operationId: api_profile_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Profile.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/recruitment/:
    get:
      operationId: api_recruitment_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recruitment'
          description: ''
    post:
      operationId: api_recruitment_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recruitment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recruitment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Recruitment'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recruitment'
          description: ''
  /api/recruitment-applications-for-applicant/:
    get:
      operationId: api_recruitment_applications_for_applicant_list
      description: Returns a list of all the applications for a user for a specified
        recruitment
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecruitmentApplicationForApplicant'
          description: ''
    post:
      operationId: api_recruitment_applications_for_applicant_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForApplicant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForApplicant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForApplicant'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentApplicationForApplicant'
          description: ''
  /api/recruitment-applications-for-applicant/{id}/:
    get:
      operationId: api_recruitment_applications_for_applicant_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this recruitment application.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentApplicationForApplicant'
          description: ''
    put:
      operationId: api_recruitment_applications_for_applicant_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this recruitment application.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForApplicant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForApplicant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForApplicant'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentApplicationForApplicant'
          description: ''
    patch:
      operationId: api_recruitment_applications_for_applicant_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this recruitment application.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentApplicationForApplicant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentApplicationForApplicant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentApplicationForApplicant'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentApplicationForApplicant'
          description: ''
    delete:
      operationId: api_recruitment_applications_for_applicant_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this recruitment application.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/recruitment-applications-for-gang/:
    get:
      operationId: api_recruitment_applications_for_gang_list
      description: Returns a list of all the recruitments for the specified gang.
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecruitmentApplicationForGang'
          description: ''
    post:
      operationId: api_recruitment_applications_for_gang_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForGang'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForGang'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForGang'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentApplicationForGang'
          description: ''
  /api/recruitment-applications-for-gang/{id}/:
    get:
      operationId: api_recruitment_applications_for_gang_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this recruitment application.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentApplicationForGang'
          description: ''
    put:
      operationId: api_recruitment_applications_for_gang_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this recruitment application.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForGang'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForGang'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForGang'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentApplicationForGang'
          description: ''
    patch:
      operationId: api_recruitment_applications_for_gang_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this recruitment application.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentApplicationForGang'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentApplicationForGang'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentApplicationForGang'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentApplicationForGang'
          description: ''
    delete:
      operationId: api_recruitment_applications_for_gang_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this recruitment application.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/recruitment-applications-for-group/:
    get:
      operationId: api_recruitment_applications_for_group_list
      description: Returns a list of all the recruitments for the specified gang.
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecruitmentApplicationForGang'
          description: ''
    post:
      operationId: api_recruitment_applications_for_group_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForGang'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForGang'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForGang'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentApplicationForGang'
          description: ''
  /api/recruitment-applications-for-group/{id}/:
    get:
      operationId: api_recruitment_applications_for_group_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this recruitment application.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentApplicationForGang'
          description: ''
    put:
      operationId: api_recruitment_applications_for_group_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this recruitment application.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForGang'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForGang'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForGang'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentApplicationForGang'
          description: ''
    patch:
      operationId: api_recruitment_applications_for_group_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this recruitment application.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentApplicationForGang'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentApplicationForGang'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentApplicationForGang'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentApplicationForGang'
          description: ''
    delete:
      operationId: api_recruitment_applications_for_group_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this recruitment application.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/recruitment-applications-for-position/:
    get:
      operationId: api_recruitment_applications_for_position_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecruitmentApplicationForGang'
          description: ''
    post:
      operationId: api_recruitment_applications_for_position_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForGang'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForGang'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForGang'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentApplicationForGang'
          description: ''
  /api/recruitment-applications-for-position/{id}/:
    get:
      operationId: api_recruitment_applications_for_position_retrieve
      description: Returns a list of all the recruitments for the specified gang.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this recruitment application.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentApplicationForGang'
          description: ''
    put:
      operationId: api_recruitment_applications_for_position_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this recruitment application.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForGang'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForGang'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationForGang'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentApplicationForGang'
          description: ''
    patch:
      operationId: api_recruitment_applications_for_position_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this recruitment application.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentApplicationForGang'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentApplicationForGang'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentApplicationForGang'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentApplicationForGang'
          description: ''
    delete:
      operationId: api_recruitment_applications_for_position_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this recruitment application.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/recruitment-for-recruiter/:
    get:
      operationId: api_recruitment_for_recruiter_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecruitmentForRecruiter'
          description: ''
    post:
      operationId: api_recruitment_for_recruiter_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitmentForRecruiter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitmentForRecruiter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitmentForRecruiter'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentForRecruiter'
          description: ''
  /api/recruitment-for-recruiter/{id}/:
    get:
      operationId: api_recruitment_for_recruiter_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recruitment.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentForRecruiter'
          description: ''
    put:
      operationId: api_recruitment_for_recruiter_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recruitment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitmentForRecruiter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitmentForRecruiter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitmentForRecruiter'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentForRecruiter'
          description: ''
    patch:
      operationId: api_recruitment_for_recruiter_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recruitment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentForRecruiter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentForRecruiter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentForRecruiter'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentForRecruiter'
          description: ''
    delete:
      operationId: api_recruitment_for_recruiter_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recruitment.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/recruitment-position/:
    get:
      operationId: api_recruitment_position_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecruitmentPosition'
          description: ''
    post:
      operationId: api_recruitment_position_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitmentPosition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitmentPosition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitmentPosition'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentPosition'
          description: ''
  /api/recruitment-position-for-applicant/:
    get:
      operationId: api_recruitment_position_for_applicant_list
      tags:
      - api
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecruitmentPositionForApplicant'
          description: ''
    post:
      operationId: api_recruitment_position_for_applicant_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitmentPositionForApplicant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitmentPositionForApplicant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitmentPositionForApplicant'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentPositionForApplicant'
          description: ''
  /api/recruitment-position-for-applicant/{id}/:
    get:
      operationId: api_recruitment_position_for_applicant_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recruitment position.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentPositionForApplicant'
          description: ''
    put:
      operationId: api_recruitment_position_for_applicant_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recruitment position.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitmentPositionForApplicant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitmentPositionForApplicant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitmentPositionForApplicant'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentPositionForApplicant'
          description: ''
    patch:
      operationId: api_recruitment_position_for_applicant_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recruitment position.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentPositionForApplicant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentPositionForApplicant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentPositionForApplicant'
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentPositionForApplicant'
          description: ''
    delete:
      operationId: api_recruitment_position_for_applicant_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recruitment position.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/recruitment-position/{id}/:
    get:
      operationId: api_recruitment_position_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recruitment position.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentPosition'
          description: ''
    put:
      operationId: api_recruitment_position_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recruitment position.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitmentPosition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitmentPosition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitmentPosition'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentPosition'
          description: ''
    patch:
      operationId: api_recruitment_position_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recruitment position.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentPosition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentPosition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentPosition'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentPosition'
          description: ''
    delete:
      operationId: api_recruitment_position_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recruitment position.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/recruitment-stats/:
    get:
      operationId: api_recruitment_stats_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecruitmentStatistics'
          description: ''
    post:
      operationId: api_recruitment_stats_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitmentStatistics'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitmentStatistics'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitmentStatistics'
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentStatistics'
          description: ''
  /api/recruitment-stats/{id}/:
    get:
      operationId: api_recruitment_stats_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recruitment statistics.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentStatistics'
          description: ''
    put:
      operationId: api_recruitment_stats_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recruitment statistics.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitmentStatistics'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitmentStatistics'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitmentStatistics'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentStatistics'
          description: ''
    patch:
      operationId: api_recruitment_stats_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recruitment statistics.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentStatistics'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentStatistics'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRecruitmentStatistics'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentStatistics'
          description: ''
    delete:
      operationId: api_recruitment_stats_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recruitment statistics.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/recruitment/{id}/:
    get:
      operationId: api_recruitment_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recruitment.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recruitment'
          description: ''
    put:
      operationId: api_recruitment_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recruitment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recruitment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recruitment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Recruitment'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recruitment'
          description: ''
    patch:
      operationId: api_recruitment_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recruitment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRecruitment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRecruitment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRecruitment'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recruitment'
          description: ''
    delete:
      operationId: api_recruitment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recruitment.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/recruitment/{id}/gangs/:
    get:
      operationId: api_recruitment_gangs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recruitment.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recruitment'
          description: ''
  /api/saksdokument/:
    get:
      operationId: api_saksdokument_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Saksdokument'
          description: ''
    post:
      operationId: api_saksdokument_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Saksdokument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Saksdokument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Saksdokument'
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saksdokument'
          description: ''
  /api/saksdokument/{id}/:
    get:
      operationId: api_saksdokument_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Saksdokument.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saksdokument'
          description: ''
    put:
      operationId: api_saksdokument_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Saksdokument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Saksdokument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Saksdokument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Saksdokument'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saksdokument'
          description: ''
    patch:
      operationId: api_saksdokument_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Saksdokument.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSaksdokument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSaksdokument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSaksdokument'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saksdokument'
          description: ''
    delete:
      operationId: api_saksdokument_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Saksdokument.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/table/:
    get:
      operationId: api_table_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Table'
          description: ''
    post:
      operationId: api_table_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Table'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Table'
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: ''
  /api/table/{id}/:
    get:
      operationId: api_table_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Table.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: ''
    put:
      operationId: api_table_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Table.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Table'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Table'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: ''
    patch:
      operationId: api_table_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Table.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTable'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTable'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTable'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: ''
    delete:
      operationId: api_table_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Table.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/tags/:
    get:
      operationId: api_tags_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
          description: ''
    post:
      operationId: api_tags_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /api/tags/{id}/:
    get:
      operationId: api_tags_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tag.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    put:
      operationId: api_tags_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tag.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: api_tags_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tag.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTag'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: api_tags_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tag.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/textitem/:
    get:
      operationId: api_textitem_list
      description: All CRUD operations can be performed in the admin panel instead.
      tags:
      - api
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TextItem'
          description: ''
  /api/textitem/{key}/:
    get:
      operationId: api_textitem_retrieve
      description: All CRUD operations can be performed in the admin panel instead.
      parameters:
      - in: path
        name: key
        schema:
          type: string
        description: A unique value identifying this TextItem.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextItem'
          description: ''
  /api/user-preference/:
    get:
      operationId: api_user_preference_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserPreference'
          description: ''
    post:
      operationId: api_user_preference_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPreference'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserPreference'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserPreference'
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreference'
          description: ''
  /api/user-preference/{id}/:
    get:
      operationId: api_user_preference_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this UserPreference.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreference'
          description: ''
    put:
      operationId: api_user_preference_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this UserPreference.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPreference'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserPreference'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserPreference'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreference'
          description: ''
    patch:
      operationId: api_user_preference_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this UserPreference.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserPreference'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserPreference'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserPreference'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreference'
          description: ''
    delete:
      operationId: api_user_preference_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this UserPreference.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/venues/:
    get:
      operationId: api_venues_list
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Venue'
          description: ''
    post:
      operationId: api_venues_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Venue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Venue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Venue'
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
          description: ''
  /api/venues/{slug}/:
    get:
      operationId: api_venues_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
          description: ''
    put:
      operationId: api_venues_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Venue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Venue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Venue'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
          description: ''
    patch:
      operationId: api_venues_partial_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVenue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVenue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVenue'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
          description: ''
    delete:
      operationId: api_venues_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /assign_group/:
    post:
      operationId: assign_group_create
      description: Assigns a user to a group.
      tags:
      - assign_group
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: assign_group_destroy
      description: Assigns a user to a group.
      tags:
      - assign_group
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /check-reservation/:
    post:
      operationId: check_reservation_create
      tags:
      - check-reservation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationCheck'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReservationCheck'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReservationCheck'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationCheck'
          description: ''
  /csrf/:
    get:
      operationId: csrf_retrieve
      tags:
      - csrf
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /events-per-day/:
    get:
      operationId: events_per_day_retrieve
      tags:
      - events-per-day
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /events-upcomming/:
    get:
      operationId: events_upcomming_retrieve
      tags:
      - events-upcomming
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /feedback/:
    post:
      operationId: feedback_create
      tags:
      - feedback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFeedback'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserFeedback'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserFeedback'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFeedback'
          description: ''
  /groups/:
    get:
      operationId: groups_list
      tags:
      - groups
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
          description: ''
  /home/:
    get:
      operationId: home_retrieve
      tags:
      - home
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /impersonate/:
    post:
      operationId: impersonate_create
      tags:
      - impersonate
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /isclosed/:
    get:
      operationId: isclosed_list
      tags:
      - isclosed
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClosedPeriod'
          description: ''
  /login/:
    post:
      operationId: login_create
      tags:
      - login
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /logout/:
    post:
      operationId: logout_create
      tags:
      - logout
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /occupiedtimeslot/:
    get:
      operationId: occupiedtimeslot_list
      tags:
      - occupiedtimeslot
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OccupiedTimeslot'
          description: ''
    post:
      operationId: occupiedtimeslot_create
      tags:
      - occupiedtimeslot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OccupiedTimeslot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OccupiedTimeslot'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OccupiedTimeslot'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OccupiedTimeslot'
          description: ''
  /purchase-feedback/:
    post:
      operationId: purchase_feedback_create
      tags:
      - purchase-feedback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseFeedback'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseFeedback'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseFeedback'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseFeedback'
          description: ''
  /recruitment-applicants-without-interviews/{id}/:
    get:
      operationId: recruitment_applicants_without_interviews_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - recruitment-applicants-without-interviews
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /recruitment-applicants-without-three-interview-criteria/{id}/:
    get:
      operationId: recruitment_applicants_without_three_interview_criteria_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - recruitment-applicants-without-three-interview-criteria
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /recruitment-application-recruiter/{application_id}/:
    get:
      operationId: recruitment_application_recruiter_retrieve
      parameters:
      - in: path
        name: application_id
        schema:
          type: string
        required: true
      tags:
      - recruitment-application-recruiter
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /recruitment-application-states-choices:
    get:
      operationId: recruitment_application_states_choices_retrieve
      tags:
      - recruitment-application-states-choices
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /recruitment-application-update-state-gang/{id}/:
    put:
      operationId: recruitment_application_update_state_gang_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - recruitment-application-update-state-gang
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationUpdateForGang'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationUpdateForGang'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationUpdateForGang'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentApplicationUpdateForGang'
          description: ''
  /recruitment-application-update-state-position/{id}/:
    put:
      operationId: recruitment_application_update_state_position_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - recruitment-application-update-state-position
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationUpdateForGang'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationUpdateForGang'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitmentApplicationUpdateForGang'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentApplicationUpdateForGang'
          description: ''
  /recruitment-download-gang-application-csv/{recruitment_id}/{gang_id}:
    get:
      operationId: recruitment_download_gang_application_csv_retrieve
      parameters:
      - in: path
        name: gang_id
        schema:
          type: integer
        required: true
      - in: path
        name: recruitment_id
        schema:
          type: integer
        required: true
      tags:
      - recruitment-download-gang-application-csv
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /recruitment-interview-availability/:
    get:
      operationId: recruitment_interview_availability_list
      tags:
      - recruitment-interview-availability
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecruitmentInterviewAvailability'
          description: ''
    post:
      operationId: recruitment_interview_availability_create
      tags:
      - recruitment-interview-availability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitmentInterviewAvailability'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitmentInterviewAvailability'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitmentInterviewAvailability'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentInterviewAvailability'
          description: ''
  /recruitment-positions/:
    get:
      operationId: recruitment_positions_list
      tags:
      - recruitment-positions
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecruitmentPosition'
          description: ''
  /recruitment-positions-gang-for-applicant/:
    get:
      operationId: recruitment_positions_gang_for_applicant_list
      tags:
      - recruitment-positions-gang-for-applicant
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecruitmentPositionForApplicant'
          description: ''
  /recruitment-positions-gang-for-gangs/:
    get:
      operationId: recruitment_positions_gang_for_gangs_list
      tags:
      - recruitment-positions-gang-for-gangs
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecruitmentPosition'
          description: ''
  /recruitment-recruiter-dashboard/{id}/:
    get:
      operationId: recruitment_recruiter_dashboard_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - recruitment-recruiter-dashboard
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /recruitment-set-interview/{id}/:
    put:
      operationId: recruitment_set_interview_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - recruitment-set-interview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Interview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Interview'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interview'
          description: ''
  /recruitment-user-priority-update/{id}/:
    put:
      operationId: recruitment_user_priority_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - recruitment-user-priority-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitmentUpdateUserPriority'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitmentUpdateUserPriority'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitmentUpdateUserPriority'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentUpdateUserPriority'
          description: ''
  /recruitment-withdraw-application-recruiter/{id}/:
    put:
      operationId: recruitment_withdraw_application_recruiter_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - recruitment-withdraw-application-recruiter
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /recruitment-withdraw-application/{id}/:
    put:
      operationId: recruitment_withdraw_application_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - recruitment-withdraw-application
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /recruitment/{id}/availability/:
    get:
      operationId: recruitment_availability_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - recruitment
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitmentInterviewAvailability'
          description: ''
  /register/:
    post:
      operationId: register_create
      tags:
      - register
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /user/:
    get:
      operationId: user_retrieve
      tags:
      - user
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /users/:
    get:
      operationId: users_list
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /webhook/:
    post:
      operationId: webhook_create
      description: |-
        https://docs.github.com/en/webhooks/using-webhooks/validating-webhook-deliveries
        https://simpleisbetterthancomplex.com/tutorial/2016/10/31/how-to-handle-github-webhooks-using-django.html
      tags:
      - webhook
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    AgeRestrictionEnum:
      enum:
      - none
      - eighteen
      - twenty
      - mixed
      type: string
      description: |-
        * `none` - Ingen aldersgrense
        * `eighteen` - 18 år
        * `twenty` - 20 år
        * `mixed` - 18 år (student), 20 år (ikke-student)
    ApplicantInfo:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          pattern: ^\+?\s*(\d\s*){8,15}$
          maxLength: 15
        occupied_timeslots:
          type: array
          items:
            $ref: '#/components/schemas/OccupiedTimeslot'
      required:
      - email
      - id
      - occupied_timeslots
      - phone_number
    ApplicantInterview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        interview_time:
          type: string
          format: date-time
          nullable: true
          description: The time of the interview
        interview_location:
          type: string
          nullable: true
          description: The location of the interview
          maxLength: 255
      required:
      - id
    ApplicantStateEnum:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 10
      type: integer
      description: |-
        * `0` - Unprocessed by all above on priority
        * `1` - Highest priority, and reserve
        * `2` - Highest priority, and wanted
        * `3` - Another position has this on reserve, with higher priority
        * `4` - Another position has this on reserve, with higher priority, but you have reserved
        * `5` - Another position has this on reserve, with higher priority, but you have them as wanted
        * `6` - Another position has this on reserve, with higher priority
        * `7` - Another position has this on wanted, with higher priority, but you have reserved
        * `8` - Another position has this on wanted, with higher priority, but you have them as wanted
        * `10` - Other position has priority
    BilligEvent:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        name:
          type: string
          maxLength: 140
        ticket_groups:
          type: array
          items:
            $ref: '#/components/schemas/BilligTicketGroup'
          readOnly: true
        sale_from:
          type: string
          format: date-time
        sale_to:
          type: string
          format: date-time
        in_sale_period:
          type: boolean
          readOnly: true
        is_almost_sold_out:
          type: boolean
          readOnly: true
        is_sold_out:
          type: boolean
          readOnly: true
      required:
      - id
      - in_sale_period
      - is_almost_sold_out
      - is_sold_out
      - name
      - sale_from
      - sale_to
      - ticket_groups
    BilligPriceGroup:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        name:
          type: string
          maxLength: 140
        can_be_put_on_card:
          type: boolean
        membership_needed:
          type: boolean
        netsale:
          type: boolean
        price:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
      required:
      - can_be_put_on_card
      - id
      - membership_needed
      - name
      - netsale
      - price
    BilligTicketGroup:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        name:
          type: string
          maxLength: 140
        is_sold_out:
          type: boolean
          readOnly: true
        is_almost_sold_out:
          type: boolean
          readOnly: true
        ticket_limit:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        price_groups:
          type: array
          items:
            $ref: '#/components/schemas/BilligPriceGroup'
          readOnly: true
      required:
      - id
      - is_almost_sold_out
      - is_sold_out
      - name
      - price_groups
      - ticket_limit
    BlankEnum:
      enum:
      - ''
    BlogPost:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        title_nb:
          type: string
          nullable: true
          title: Tittel (norsk)
          maxLength: 64
        text_nb:
          type: string
          nullable: true
          title: Tekst (norsk)
        title_en:
          type: string
          nullable: true
          title: Tittel (engelsk)
          maxLength: 64
        text_en:
          type: string
          nullable: true
          title: Tekst (engelsk)
        published_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        image:
          type: integer
          nullable: true
      required:
      - created_at
      - created_by
      - id
      - published_at
      - updated_at
      - updated_by
      - version
    Booking:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        tables:
          type: array
          items:
            $ref: '#/components/schemas/Table'
        user:
          type: array
          items:
            $ref: '#/components/schemas/User'
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name:
          type: string
          nullable: true
          maxLength: 64
        text:
          type: string
          nullable: true
        from_dt:
          type: string
          format: date-time
          nullable: true
        to_dt:
          type: string
          format: date-time
          nullable: true
        first_name:
          type: string
          nullable: true
          maxLength: 64
        last_name:
          type: string
          nullable: true
          maxLength: 64
        email:
          type: string
          nullable: true
          maxLength: 64
        phone_nr:
          type: string
          nullable: true
          maxLength: 64
        created_by:
          type: integer
          readOnly: true
          nullable: true
        updated_by:
          type: integer
          readOnly: true
          nullable: true
      required:
      - created_at
      - created_by
      - id
      - tables
      - updated_at
      - updated_by
      - user
      - version
    Campus:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name_nb:
          type: string
          maxLength: 64
        name_en:
          type: string
          maxLength: 64
        abbreviation:
          type: string
          nullable: true
          maxLength: 10
      required:
      - id
      - name_en
      - name_nb
    ClosedPeriod:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        message_nb:
          type: string
          nullable: true
          title: Melding (norsk)
        message_en:
          type: string
          nullable: true
          title: Melding (engelsk)
        description_nb:
          type: string
          nullable: true
          title: Beskrivelse (norsk)
        description_en:
          type: string
          nullable: true
          title: Beskrivelse (engelsk)
        start_dt:
          type: string
          format: date
          title: Start dato
        end_dt:
          type: string
          format: date
          title: Slutt dato
      required:
      - created_at
      - created_by
      - id
      - updated_at
      - updated_by
      - version
    Event:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        end_dt:
          type: string
          format: date-time
          readOnly: true
        total_registrations:
          type: integer
          readOnly: true
        image_url:
          type: string
          readOnly: true
        custom_tickets:
          type: array
          items:
            $ref: '#/components/schemas/EventCustomTicket'
          readOnly: true
        billig:
          allOf:
          - $ref: '#/components/schemas/BilligEvent'
          readOnly: true
        image_id:
          type: integer
          writeOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        title_nb:
          type: string
          maxLength: 140
        title_en:
          type: string
          maxLength: 140
        description_long_nb:
          type: string
        description_long_en:
          type: string
        description_short_nb:
          type: string
        description_short_en:
          type: string
        location:
          type: string
          maxLength: 140
        host:
          type: string
          maxLength: 140
        age_restriction:
          $ref: '#/components/schemas/AgeRestrictionEnum'
        category:
          $ref: '#/components/schemas/EventCategoryEnum'
        start_dt:
          type: string
          format: date-time
        duration:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        publish_dt:
          type: string
          format: date-time
        doors_time:
          type: string
          format: time
          nullable: true
        capacity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        ticket_type:
          $ref: '#/components/schemas/TicketTypeEnum'
        editors:
          type: array
          items:
            type: integer
      required:
      - billig
      - capacity
      - created_at
      - created_by
      - custom_tickets
      - description_long_en
      - description_long_nb
      - description_short_en
      - description_short_nb
      - duration
      - end_dt
      - host
      - id
      - image_id
      - image_url
      - location
      - publish_dt
      - start_dt
      - title_en
      - title_nb
      - total_registrations
      - updated_at
      - updated_by
      - version
    EventCategoryEnum:
      enum:
      - samfundsmote
      - concert
      - debate
      - quiz
      - lecture
      - other
      type: string
      description: |-
        * `samfundsmote` - Samfundsmøte
        * `concert` - Konsert
        * `debate` - Debatt
        * `quiz` - Quiz
        * `lecture` - Kurs
        * `other` - Annet
    EventCustomTicket:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name_nb:
          type: string
          maxLength: 140
        name_en:
          type: string
          maxLength: 140
        price:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - created_at
      - created_by
      - id
      - name_en
      - name_nb
      - price
      - updated_at
      - updated_by
      - version
    EventGroup:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name:
          type: string
          maxLength: 140
      required:
      - created_at
      - created_by
      - id
      - name
      - updated_at
      - updated_by
      - version
    FoodCategory:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        name_nb:
          type: string
          nullable: true
          title: Navn (norsk)
          maxLength: 64
        name_en:
          type: string
          nullable: true
          title: Navn (engelsk)
          maxLength: 64
      required:
      - id
    FoodPreference:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name_nb:
          type: string
          nullable: true
          title: Navn (norsk)
          maxLength: 64
        name_en:
          type: string
          nullable: true
          title: Navn (engelsk)
          maxLength: 64
      required:
      - created_at
      - created_by
      - id
      - updated_at
      - updated_by
      - version
    Gang:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name_nb:
          type: string
          nullable: true
          title: Navn Norsk
          maxLength: 64
        name_en:
          type: string
          nullable: true
          title: Navn Engelsk
          maxLength: 64
        abbreviation:
          type: string
          nullable: true
          title: Forkortelse
          maxLength: 8
        webpage:
          type: string
          format: uri
          nullable: true
          title: Nettside
          maxLength: 200
        logo:
          type: string
          format: uri
          nullable: true
        organization:
          type: integer
          nullable: true
          title: Organisasjon
        gang_type:
          type: integer
          nullable: true
          title: Gruppetype
        info_page:
          type: string
          description: Primary key, this field will identify the object and be used
            in the URL.
          nullable: true
          title: Infoside
        gang_leader_group:
          type: integer
          nullable: true
          title: Gangleder
        event_admin_group:
          type: integer
          nullable: true
          title: Arrangementgruppe
        recruitment_admin_group:
          type: integer
          nullable: true
          title: Innganggruppe
      required:
      - created_at
      - created_by
      - id
      - updated_at
      - updated_by
      - version
    GangType:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        gangs:
          type: array
          items:
            $ref: '#/components/schemas/Gang'
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        title_nb:
          type: string
          nullable: true
          title: Gruppetype Norsk
          maxLength: 64
        title_en:
          type: string
          nullable: true
          title: Gruppetype Engelsk
          maxLength: 64
      required:
      - created_at
      - created_by
      - gangs
      - id
      - updated_at
      - updated_by
      - version
    Group:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 150
        permissions:
          type: array
          items:
            type: integer
      required:
      - id
      - name
    Image:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        url:
          type: string
          readOnly: true
        file:
          type: string
          format: uri
          writeOnly: true
        tag_string:
          type: string
          writeOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        title:
          type: string
          maxLength: 140
      required:
      - created_at
      - created_by
      - file
      - id
      - tags
      - title
      - updated_at
      - updated_by
      - url
      - version
    Infobox:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        title_nb:
          type: string
          title: Infoboks titel (norsk)
          maxLength: 60
        text_nb:
          type: string
          title: Infoboks tekst (norsk)
          maxLength: 255
        title_en:
          type: string
          title: Infoboks tekst (engelsk)
          maxLength: 60
        text_en:
          type: string
          title: Infoboks tekst (engelsk)
          maxLength: 255
        color:
          type: string
          title: Infoboks hexcolor eller css color-constant
          maxLength: 15
        url:
          type: string
          format: uri
          nullable: true
          title: Infoboks utgående link
          maxLength: 200
        image:
          type: integer
          nullable: true
          title: Infoboks bilde
      required:
      - color
      - created_at
      - created_by
      - id
      - text_en
      - text_nb
      - title_en
      - title_nb
      - updated_at
      - updated_by
      - version
    InformationPage:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        slug_field:
          type: string
          description: Primary key, this field will identify the object and be used
            in the URL.
          maxLength: 64
          pattern: ^[-a-zA-Z0-9_]+$
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        title_nb:
          type: string
          nullable: true
          title: Tittel (norsk)
          maxLength: 64
        text_nb:
          type: string
          nullable: true
          title: Tekst (norsk)
        title_en:
          type: string
          nullable: true
          title: Tittel (engelsk)
          maxLength: 64
        text_en:
          type: string
          nullable: true
          title: Tekst (engelsk)
      required:
      - created_at
      - created_by
      - updated_at
      - updated_by
      - version
    Interview:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        interviewers:
          type: array
          items:
            $ref: '#/components/schemas/Interviewer'
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        interview_time:
          type: string
          format: date-time
          nullable: true
          description: The time of the interview
        interview_location:
          type: string
          nullable: true
          description: The location of the interview
          maxLength: 255
        notes:
          type: string
          nullable: true
          description: Notes for the interview
        room:
          type: integer
          nullable: true
          description: Room where the interview is held
      required:
      - created_at
      - created_by
      - id
      - updated_at
      - updated_by
      - version
    InterviewRoom:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name:
          type: string
          description: Name of the room
          maxLength: 255
        location:
          type: string
          description: Physical location, eg. campus
          maxLength: 255
        start_time:
          type: string
          format: date-time
          description: Start time of availability
        end_time:
          type: string
          format: date-time
          description: End time of availability
        recruitment:
          type: integer
          description: The recruitment that is recruiting
        gang:
          type: integer
          nullable: true
          description: The gang that booked the room
      required:
      - created_at
      - created_by
      - end_time
      - id
      - location
      - name
      - recruitment
      - start_time
      - updated_at
      - updated_by
      - version
    Interviewer:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        id:
          type: integer
          readOnly: true
      required:
      - email
      - id
      - username
    KeyValue:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        key:
          type: string
          maxLength: 60
        value:
          type: string
          maxLength: 60
      required:
      - id
      - key
    Menu:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        menu_items:
          type: array
          items:
            $ref: '#/components/schemas/MenuItem'
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name_nb:
          type: string
          nullable: true
          title: Navn (norsk)
          maxLength: 64
        description_nb:
          type: string
          nullable: true
          title: Beskrivelse (norsk)
        name_en:
          type: string
          nullable: true
          title: Navn (engelsk)
          maxLength: 64
        description_en:
          type: string
          nullable: true
          title: Beskrivelse (engelsk)
      required:
      - created_at
      - created_by
      - id
      - menu_items
      - updated_at
      - updated_by
      - version
    MenuItem:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        food_preferences:
          type: array
          items:
            $ref: '#/components/schemas/FoodPreference'
          readOnly: true
        food_category:
          allOf:
          - $ref: '#/components/schemas/FoodCategory'
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name_nb:
          type: string
          nullable: true
          title: Navn (norsk)
          maxLength: 64
        description_nb:
          type: string
          nullable: true
          title: Beskrivelse (norsk)
        name_en:
          type: string
          nullable: true
          title: Navn (engelsk)
          maxLength: 64
        description_en:
          type: string
          nullable: true
          title: Beskrivelse (engelsk)
        price:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        price_member:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
      required:
      - created_at
      - created_by
      - food_category
      - food_preferences
      - id
      - updated_at
      - updated_by
      - version
    Merch:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        variations:
          type: array
          items:
            $ref: '#/components/schemas/MerchVariation'
          readOnly: true
        stock:
          type: integer
          readOnly: true
        name_nb:
          type: string
          title: Navn (norsk)
          maxLength: 60
        description_nb:
          type: string
          title: Beskrivelse (norsk)
          maxLength: 255
        name_en:
          type: string
          title: Navn (engelsk)
          maxLength: 60
        description_en:
          type: string
          title: Beskrivelse (engelsk)
          maxLength: 255
        base_price:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        released_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        image:
          type: integer
          nullable: true
          title: Produkt Bilde
      required:
      - created_at
      - id
      - released_at
      - stock
      - updated_at
      - variations
    MerchVariation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        specification:
          type: string
          title: Variation specification
          maxLength: 16
        price:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          title: Price Variation
        stock:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          title: In stock
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        merch:
          type: integer
      required:
      - created_at
      - id
      - merch
      - specification
      - updated_at
    NullEnum:
      enum:
      - null
    OccasionEnum:
      enum:
      - DRINK
      - FOOD
      type: string
      description: |-
        * `DRINK` - Drikke
        * `FOOD` - Mat
    OccupiedTimeslot:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        start_dt:
          type: string
          format: date-time
          description: Start of occupied time
        end_dt:
          type: string
          format: date-time
          description: End of occupied time
        user:
          type: integer
          description: Occupied timeslots for user
        recruitment:
          type: integer
          description: Which recruitment this occupancy applies to
      required:
      - end_dt
      - id
      - recruitment
      - start_dt
      - user
    Organization:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name:
          type: string
          maxLength: 32
      required:
      - created_at
      - created_by
      - id
      - name
      - updated_at
      - updated_by
      - version
    PatchedBlogPost:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        title_nb:
          type: string
          nullable: true
          title: Tittel (norsk)
          maxLength: 64
        text_nb:
          type: string
          nullable: true
          title: Tekst (norsk)
        title_en:
          type: string
          nullable: true
          title: Tittel (engelsk)
          maxLength: 64
        text_en:
          type: string
          nullable: true
          title: Tekst (engelsk)
        published_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        image:
          type: integer
          nullable: true
    PatchedBooking:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        tables:
          type: array
          items:
            $ref: '#/components/schemas/Table'
        user:
          type: array
          items:
            $ref: '#/components/schemas/User'
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name:
          type: string
          nullable: true
          maxLength: 64
        text:
          type: string
          nullable: true
        from_dt:
          type: string
          format: date-time
          nullable: true
        to_dt:
          type: string
          format: date-time
          nullable: true
        first_name:
          type: string
          nullable: true
          maxLength: 64
        last_name:
          type: string
          nullable: true
          maxLength: 64
        email:
          type: string
          nullable: true
          maxLength: 64
        phone_nr:
          type: string
          nullable: true
          maxLength: 64
        created_by:
          type: integer
          readOnly: true
          nullable: true
        updated_by:
          type: integer
          readOnly: true
          nullable: true
    PatchedClosedPeriod:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        message_nb:
          type: string
          nullable: true
          title: Melding (norsk)
        message_en:
          type: string
          nullable: true
          title: Melding (engelsk)
        description_nb:
          type: string
          nullable: true
          title: Beskrivelse (norsk)
        description_en:
          type: string
          nullable: true
          title: Beskrivelse (engelsk)
        start_dt:
          type: string
          format: date
          title: Start dato
        end_dt:
          type: string
          format: date
          title: Slutt dato
    PatchedEvent:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        end_dt:
          type: string
          format: date-time
          readOnly: true
        total_registrations:
          type: integer
          readOnly: true
        image_url:
          type: string
          readOnly: true
        custom_tickets:
          type: array
          items:
            $ref: '#/components/schemas/EventCustomTicket'
          readOnly: true
        billig:
          allOf:
          - $ref: '#/components/schemas/BilligEvent'
          readOnly: true
        image_id:
          type: integer
          writeOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        title_nb:
          type: string
          maxLength: 140
        title_en:
          type: string
          maxLength: 140
        description_long_nb:
          type: string
        description_long_en:
          type: string
        description_short_nb:
          type: string
        description_short_en:
          type: string
        location:
          type: string
          maxLength: 140
        host:
          type: string
          maxLength: 140
        age_restriction:
          $ref: '#/components/schemas/AgeRestrictionEnum'
        category:
          $ref: '#/components/schemas/EventCategoryEnum'
        start_dt:
          type: string
          format: date-time
        duration:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        publish_dt:
          type: string
          format: date-time
        doors_time:
          type: string
          format: time
          nullable: true
        capacity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        ticket_type:
          $ref: '#/components/schemas/TicketTypeEnum'
        editors:
          type: array
          items:
            type: integer
    PatchedEventGroup:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name:
          type: string
          maxLength: 140
    PatchedFoodCategory:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        name_nb:
          type: string
          nullable: true
          title: Navn (norsk)
          maxLength: 64
        name_en:
          type: string
          nullable: true
          title: Navn (engelsk)
          maxLength: 64
    PatchedFoodPreference:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name_nb:
          type: string
          nullable: true
          title: Navn (norsk)
          maxLength: 64
        name_en:
          type: string
          nullable: true
          title: Navn (engelsk)
          maxLength: 64
    PatchedGang:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name_nb:
          type: string
          nullable: true
          title: Navn Norsk
          maxLength: 64
        name_en:
          type: string
          nullable: true
          title: Navn Engelsk
          maxLength: 64
        abbreviation:
          type: string
          nullable: true
          title: Forkortelse
          maxLength: 8
        webpage:
          type: string
          format: uri
          nullable: true
          title: Nettside
          maxLength: 200
        logo:
          type: string
          format: uri
          nullable: true
        organization:
          type: integer
          nullable: true
          title: Organisasjon
        gang_type:
          type: integer
          nullable: true
          title: Gruppetype
        info_page:
          type: string
          description: Primary key, this field will identify the object and be used
            in the URL.
          nullable: true
          title: Infoside
        gang_leader_group:
          type: integer
          nullable: true
          title: Gangleder
        event_admin_group:
          type: integer
          nullable: true
          title: Arrangementgruppe
        recruitment_admin_group:
          type: integer
          nullable: true
          title: Innganggruppe
    PatchedGangType:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        gangs:
          type: array
          items:
            $ref: '#/components/schemas/Gang'
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        title_nb:
          type: string
          nullable: true
          title: Gruppetype Norsk
          maxLength: 64
        title_en:
          type: string
          nullable: true
          title: Gruppetype Engelsk
          maxLength: 64
    PatchedImage:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        url:
          type: string
          readOnly: true
        file:
          type: string
          format: uri
          writeOnly: true
        tag_string:
          type: string
          writeOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        title:
          type: string
          maxLength: 140
    PatchedInfobox:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        title_nb:
          type: string
          title: Infoboks titel (norsk)
          maxLength: 60
        text_nb:
          type: string
          title: Infoboks tekst (norsk)
          maxLength: 255
        title_en:
          type: string
          title: Infoboks tekst (engelsk)
          maxLength: 60
        text_en:
          type: string
          title: Infoboks tekst (engelsk)
          maxLength: 255
        color:
          type: string
          title: Infoboks hexcolor eller css color-constant
          maxLength: 15
        url:
          type: string
          format: uri
          nullable: true
          title: Infoboks utgående link
          maxLength: 200
        image:
          type: integer
          nullable: true
          title: Infoboks bilde
    PatchedInformationPage:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        slug_field:
          type: string
          description: Primary key, this field will identify the object and be used
            in the URL.
          maxLength: 64
          pattern: ^[-a-zA-Z0-9_]+$
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        title_nb:
          type: string
          nullable: true
          title: Tittel (norsk)
          maxLength: 64
        text_nb:
          type: string
          nullable: true
          title: Tekst (norsk)
        title_en:
          type: string
          nullable: true
          title: Tittel (engelsk)
          maxLength: 64
        text_en:
          type: string
          nullable: true
          title: Tekst (engelsk)
    PatchedInterview:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        interviewers:
          type: array
          items:
            $ref: '#/components/schemas/Interviewer'
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        interview_time:
          type: string
          format: date-time
          nullable: true
          description: The time of the interview
        interview_location:
          type: string
          nullable: true
          description: The location of the interview
          maxLength: 255
        notes:
          type: string
          nullable: true
          description: Notes for the interview
        room:
          type: integer
          nullable: true
          description: Room where the interview is held
    PatchedInterviewRoom:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name:
          type: string
          description: Name of the room
          maxLength: 255
        location:
          type: string
          description: Physical location, eg. campus
          maxLength: 255
        start_time:
          type: string
          format: date-time
          description: Start time of availability
        end_time:
          type: string
          format: date-time
          description: End time of availability
        recruitment:
          type: integer
          description: The recruitment that is recruiting
        gang:
          type: integer
          nullable: true
          description: The gang that booked the room
    PatchedMenu:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        menu_items:
          type: array
          items:
            $ref: '#/components/schemas/MenuItem'
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name_nb:
          type: string
          nullable: true
          title: Navn (norsk)
          maxLength: 64
        description_nb:
          type: string
          nullable: true
          title: Beskrivelse (norsk)
        name_en:
          type: string
          nullable: true
          title: Navn (engelsk)
          maxLength: 64
        description_en:
          type: string
          nullable: true
          title: Beskrivelse (engelsk)
    PatchedMenuItem:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        food_preferences:
          type: array
          items:
            $ref: '#/components/schemas/FoodPreference'
          readOnly: true
        food_category:
          allOf:
          - $ref: '#/components/schemas/FoodCategory'
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name_nb:
          type: string
          nullable: true
          title: Navn (norsk)
          maxLength: 64
        description_nb:
          type: string
          nullable: true
          title: Beskrivelse (norsk)
        name_en:
          type: string
          nullable: true
          title: Navn (engelsk)
          maxLength: 64
        description_en:
          type: string
          nullable: true
          title: Beskrivelse (engelsk)
        price:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        price_member:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
    PatchedMerch:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        variations:
          type: array
          items:
            $ref: '#/components/schemas/MerchVariation'
          readOnly: true
        stock:
          type: integer
          readOnly: true
        name_nb:
          type: string
          title: Navn (norsk)
          maxLength: 60
        description_nb:
          type: string
          title: Beskrivelse (norsk)
          maxLength: 255
        name_en:
          type: string
          title: Navn (engelsk)
          maxLength: 60
        description_en:
          type: string
          title: Beskrivelse (engelsk)
          maxLength: 255
        base_price:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        released_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        image:
          type: integer
          nullable: true
          title: Produkt Bilde
    PatchedOrganization:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name:
          type: string
          maxLength: 32
    PatchedProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nickname:
          type: string
          nullable: true
          maxLength: 30
    PatchedRecruitment:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        separate_positions:
          type: array
          items:
            $ref: '#/components/schemas/RecruitmentSeparatePosition'
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name_nb:
          type: string
          description: Name of the recruitment
          maxLength: 100
        name_en:
          type: string
          description: Name of the recruitment
          maxLength: 100
        visible_from:
          type: string
          format: date-time
          description: When it becomes visible for applicants
        actual_application_deadline:
          type: string
          format: date-time
          description: Last point an application can be sent, typically a bit after
            the shown deadline to avoid getting a lot of extra mail
        shown_application_deadline:
          type: string
          format: date-time
          description: The deadline that is shown to applicants
        reprioritization_deadline_for_applicant:
          type: string
          format: date-time
          description: Before allocation meeting
        reprioritization_deadline_for_groups:
          type: string
          format: date-time
          description: Reprioritization deadline for groups
        max_applications:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          title: Max applications per applicant
        organization:
          type: integer
          description: The organization that is recruiting
    PatchedRecruitmentApplicationForApplicant:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        application_text:
          type: string
          description: Application text
        recruitment_position:
          type: integer
          description: The position which is recruiting
        applicant_priority:
          type: integer
          readOnly: true
          nullable: true
          description: The priority of the application
        withdrawn:
          type: boolean
          readOnly: true
          nullable: true
        interview:
          allOf:
          - $ref: '#/components/schemas/ApplicantInterview'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        user:
          type: integer
          description: The user that is applying
        recruitment:
          type: integer
          description: The recruitment that is recruiting
    PatchedRecruitmentApplicationForGang:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/ApplicantInfo'
          readOnly: true
        interview:
          $ref: '#/components/schemas/Interview'
        interviewers:
          type: array
          items:
            $ref: '#/components/schemas/Interviewer'
          readOnly: true
        recruitment_position:
          allOf:
          - $ref: '#/components/schemas/RecruitmentPosition'
          readOnly: true
        application_count:
          type: integer
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        application_text:
          type: string
          description: Application text
        applicant_priority:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          description: The priority of the application
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        withdrawn:
          type: boolean
          nullable: true
        recruiter_priority:
          allOf:
          - $ref: '#/components/schemas/RecruiterPriorityEnum'
          description: |-
            The priority of the application

            * `0` - Not Set
            * `1` - Reserve
            * `2` - Wanted
            * `3` - Not Wanted
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        recruiter_status:
          allOf:
          - $ref: '#/components/schemas/RecruiterStatusEnum'
          description: |-
            The status of the application

            * `0` - Not Set
            * `1` - Called and Accepted
            * `2` - Called and Rejected
            * `3` - Rejection
            * `4` - Automatic Rejection
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        applicant_state:
          allOf:
          - $ref: '#/components/schemas/ApplicantStateEnum'
          description: |-
            The state of the applicant for the recruiter

            * `0` - Unprocessed by all above on priority
            * `1` - Highest priority, and reserve
            * `2` - Highest priority, and wanted
            * `3` - Another position has this on reserve, with higher priority
            * `4` - Another position has this on reserve, with higher priority, but you have reserved
            * `5` - Another position has this on reserve, with higher priority, but you have them as wanted
            * `6` - Another position has this on reserve, with higher priority
            * `7` - Another position has this on wanted, with higher priority, but you have reserved
            * `8` - Another position has this on wanted, with higher priority, but you have them as wanted
            * `10` - Other position has priority
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        recruitment:
          type: integer
          description: The recruitment that is recruiting
    PatchedRecruitmentForRecruiter:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        seperate_positions:
          type: array
          items:
            $ref: '#/components/schemas/RecruitmentSeparatePosition'
          readOnly: true
        recruitment_progress:
          type: number
          format: double
          readOnly: true
        statistics:
          allOf:
          - $ref: '#/components/schemas/RecruitmentStatistics'
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name_nb:
          type: string
          description: Name of the recruitment
          maxLength: 100
        name_en:
          type: string
          description: Name of the recruitment
          maxLength: 100
        visible_from:
          type: string
          format: date-time
          description: When it becomes visible for applicants
        actual_application_deadline:
          type: string
          format: date-time
          description: Last point an application can be sent, typically a bit after
            the shown deadline to avoid getting a lot of extra mail
        shown_application_deadline:
          type: string
          format: date-time
          description: The deadline that is shown to applicants
        reprioritization_deadline_for_applicant:
          type: string
          format: date-time
          description: Before allocation meeting
        reprioritization_deadline_for_groups:
          type: string
          format: date-time
          description: Reprioritization deadline for groups
        max_applications:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          title: Max applications per applicant
        organization:
          type: integer
          description: The organization that is recruiting
    PatchedRecruitmentPosition:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        total_applicants:
          type: integer
          readOnly: true
        processed_applicants:
          type: integer
          readOnly: true
        accepted_applicants:
          type: integer
          readOnly: true
        gang:
          allOf:
          - $ref: '#/components/schemas/Gang'
          readOnly: true
        interviewers:
          type: array
          items:
            $ref: '#/components/schemas/Interviewer'
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name_nb:
          type: string
          description: Name of the position
          maxLength: 100
        name_en:
          type: string
          description: Name of the position
          maxLength: 100
        short_description_nb:
          type: string
          description: Short description of the position
          maxLength: 100
        short_description_en:
          type: string
          nullable: true
          description: Short description of the position
          maxLength: 100
        long_description_nb:
          type: string
          description: Long description of the position
        long_description_en:
          type: string
          nullable: true
          description: Long description of the position
        is_funksjonaer_position:
          type: boolean
          description: Is this a funksjonær position?
        default_application_letter_nb:
          type: string
          description: Default application letter for the position
        default_application_letter_en:
          type: string
          nullable: true
          description: Default application letter for the position
        norwegian_applicants_only:
          type: boolean
          description: Is this position only for Norwegian applicants?
        tags:
          type: string
          description: Tags for the position
          maxLength: 100
        recruitment:
          type: integer
          nullable: true
          description: The recruitment that is recruiting
        shared_interview_group:
          type: integer
          nullable: true
          description: Shared interviewgroup for position
    PatchedRecruitmentPositionForApplicant:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name_nb:
          type: string
          description: Name of the position
          maxLength: 100
        name_en:
          type: string
          description: Name of the position
          maxLength: 100
        short_description_nb:
          type: string
          description: Short description of the position
          maxLength: 100
        short_description_en:
          type: string
          nullable: true
          description: Short description of the position
          maxLength: 100
        long_description_nb:
          type: string
          description: Long description of the position
        long_description_en:
          type: string
          nullable: true
          description: Long description of the position
        is_funksjonaer_position:
          type: boolean
          description: Is this a funksjonær position?
        default_application_letter_nb:
          type: string
          description: Default application letter for the position
        default_application_letter_en:
          type: string
          nullable: true
          description: Default application letter for the position
        gang:
          $ref: '#/components/schemas/Gang'
        recruitment:
          type: integer
          nullable: true
          description: The recruitment that is recruiting
    PatchedRecruitmentStatistics:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        time_stats:
          type: array
          items:
            $ref: '#/components/schemas/RecruitmentTimeStat'
          readOnly: true
        date_stats:
          type: array
          items:
            $ref: '#/components/schemas/RecruitmentDateStat'
          readOnly: true
        campus_stats:
          type: array
          items:
            $ref: '#/components/schemas/RecruitmentCampusStat'
          readOnly: true
        gang_stats:
          type: array
          items:
            $ref: '#/components/schemas/RecruitmentGangStat'
          readOnly: true
        total_applicants:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        total_applications:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        recruitment:
          type: integer
          nullable: true
    PatchedSaksdokument:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        url:
          type: string
          nullable: true
          readOnly: true
        file:
          type: string
          format: uri
          writeOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        title_nb:
          type: string
          nullable: true
          title: Tittel (Norsk)
          maxLength: 80
        title_en:
          type: string
          nullable: true
          title: Tittel (Engelsk)
          maxLength: 80
        publication_date:
          type: string
          format: date-time
          nullable: true
        category:
          $ref: '#/components/schemas/SaksdokumentCategoryEnum'
    PatchedTable:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name_nb:
          type: string
          nullable: true
          title: Navn (norsk)
          maxLength: 64
        description_nb:
          type: string
          nullable: true
          title: Beskrivelse (norsk)
          maxLength: 64
        name_en:
          type: string
          nullable: true
          title: Navn (engelsk)
          maxLength: 64
        description_en:
          type: string
          nullable: true
          title: Beskrivelse (engelsk)
          maxLength: 64
        seating:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        venue:
          type: integer
          nullable: true
    PatchedTag:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name:
          type: string
          maxLength: 140
        color:
          type: string
          nullable: true
          maxLength: 6
    PatchedUserPreference:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        theme:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ThemeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        mirror_dimension:
          type: boolean
        cursor_trail:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        user:
          type: integer
          nullable: true
    PatchedVenue:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name:
          type: string
          nullable: true
          maxLength: 140
        slug:
          type: string
          nullable: true
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          nullable: true
        floor:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        last_renovated:
          type: string
          format: date-time
          nullable: true
        handicapped_approved:
          type: boolean
          nullable: true
        responsible_crew:
          type: string
          nullable: true
          maxLength: 140
        opening:
          type: string
          format: time
          nullable: true
        closing:
          type: string
          format: time
          nullable: true
        opening_monday:
          type: string
          format: time
          nullable: true
        opening_tuesday:
          type: string
          format: time
          nullable: true
        opening_wednesday:
          type: string
          format: time
          nullable: true
        opening_thursday:
          type: string
          format: time
          nullable: true
        opening_friday:
          type: string
          format: time
          nullable: true
        opening_saturday:
          type: string
          format: time
          nullable: true
        opening_sunday:
          type: string
          format: time
          nullable: true
        closing_monday:
          type: string
          format: time
          nullable: true
        closing_tuesday:
          type: string
          format: time
          nullable: true
        closing_wednesday:
          type: string
          format: time
          nullable: true
        closing_thursday:
          type: string
          format: time
          nullable: true
        closing_friday:
          type: string
          format: time
          nullable: true
        closing_saturday:
          type: string
          format: time
          nullable: true
        closing_sunday:
          type: string
          format: time
          nullable: true
    Profile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nickname:
          type: string
          nullable: true
          maxLength: 30
      required:
      - id
    PurchaseFeedback:
      type: object
      properties:
        event:
          type: integer
        title:
          type: string
          maxLength: 255
        alternatives:
          type: object
          additionalProperties:
            type: string
        responses:
          type: object
          additionalProperties:
            type: string
      required:
      - alternatives
      - event
      - responses
    RecruiterPriorityEnum:
      enum:
      - 0
      - 1
      - 2
      - 3
      type: integer
      description: |-
        * `0` - Not Set
        * `1` - Reserve
        * `2` - Wanted
        * `3` - Not Wanted
    RecruiterStatusEnum:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      type: integer
      description: |-
        * `0` - Not Set
        * `1` - Called and Accepted
        * `2` - Called and Rejected
        * `3` - Rejection
        * `4` - Automatic Rejection
    Recruitment:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        separate_positions:
          type: array
          items:
            $ref: '#/components/schemas/RecruitmentSeparatePosition'
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name_nb:
          type: string
          description: Name of the recruitment
          maxLength: 100
        name_en:
          type: string
          description: Name of the recruitment
          maxLength: 100
        visible_from:
          type: string
          format: date-time
          description: When it becomes visible for applicants
        actual_application_deadline:
          type: string
          format: date-time
          description: Last point an application can be sent, typically a bit after
            the shown deadline to avoid getting a lot of extra mail
        shown_application_deadline:
          type: string
          format: date-time
          description: The deadline that is shown to applicants
        reprioritization_deadline_for_applicant:
          type: string
          format: date-time
          description: Before allocation meeting
        reprioritization_deadline_for_groups:
          type: string
          format: date-time
          description: Reprioritization deadline for groups
        max_applications:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          title: Max applications per applicant
        organization:
          type: integer
          description: The organization that is recruiting
      required:
      - actual_application_deadline
      - created_at
      - created_by
      - id
      - name_en
      - name_nb
      - organization
      - reprioritization_deadline_for_applicant
      - reprioritization_deadline_for_groups
      - separate_positions
      - shown_application_deadline
      - updated_at
      - updated_by
      - version
      - visible_from
    RecruitmentApplicationForApplicant:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        application_text:
          type: string
          description: Application text
        recruitment_position:
          type: integer
          description: The position which is recruiting
        applicant_priority:
          type: integer
          readOnly: true
          nullable: true
          description: The priority of the application
        withdrawn:
          type: boolean
          readOnly: true
          nullable: true
        interview:
          allOf:
          - $ref: '#/components/schemas/ApplicantInterview'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        user:
          type: integer
          description: The user that is applying
        recruitment:
          type: integer
          description: The recruitment that is recruiting
      required:
      - applicant_priority
      - application_text
      - created_at
      - id
      - interview
      - recruitment
      - recruitment_position
      - user
      - withdrawn
    RecruitmentApplicationForGang:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/ApplicantInfo'
          readOnly: true
        interview:
          $ref: '#/components/schemas/Interview'
        interviewers:
          type: array
          items:
            $ref: '#/components/schemas/Interviewer'
          readOnly: true
        recruitment_position:
          allOf:
          - $ref: '#/components/schemas/RecruitmentPosition'
          readOnly: true
        application_count:
          type: integer
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        application_text:
          type: string
          description: Application text
        applicant_priority:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          description: The priority of the application
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        withdrawn:
          type: boolean
          nullable: true
        recruiter_priority:
          allOf:
          - $ref: '#/components/schemas/RecruiterPriorityEnum'
          description: |-
            The priority of the application

            * `0` - Not Set
            * `1` - Reserve
            * `2` - Wanted
            * `3` - Not Wanted
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        recruiter_status:
          allOf:
          - $ref: '#/components/schemas/RecruiterStatusEnum'
          description: |-
            The status of the application

            * `0` - Not Set
            * `1` - Called and Accepted
            * `2` - Called and Rejected
            * `3` - Rejection
            * `4` - Automatic Rejection
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        applicant_state:
          allOf:
          - $ref: '#/components/schemas/ApplicantStateEnum'
          description: |-
            The state of the applicant for the recruiter

            * `0` - Unprocessed by all above on priority
            * `1` - Highest priority, and reserve
            * `2` - Highest priority, and wanted
            * `3` - Another position has this on reserve, with higher priority
            * `4` - Another position has this on reserve, with higher priority, but you have reserved
            * `5` - Another position has this on reserve, with higher priority, but you have them as wanted
            * `6` - Another position has this on reserve, with higher priority
            * `7` - Another position has this on wanted, with higher priority, but you have reserved
            * `8` - Another position has this on wanted, with higher priority, but you have them as wanted
            * `10` - Other position has priority
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        recruitment:
          type: integer
          description: The recruitment that is recruiting
      required:
      - application_count
      - application_text
      - created_at
      - created_by
      - id
      - interview
      - interviewers
      - recruitment
      - recruitment_position
      - updated_at
      - updated_by
      - user
      - version
    RecruitmentApplicationUpdateForGang:
      type: object
      properties:
        recruiter_priority:
          $ref: '#/components/schemas/RecruiterPriorityEnum'
        recruiter_status:
          $ref: '#/components/schemas/RecruiterStatusEnum'
    RecruitmentCampusStat:
      type: object
      properties:
        campus:
          type: string
          readOnly: true
        count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - campus
      - count
    RecruitmentDateStat:
      type: object
      properties:
        date:
          type: string
          format: date
          title: Time
        count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - count
      - date
    RecruitmentForRecruiter:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        seperate_positions:
          type: array
          items:
            $ref: '#/components/schemas/RecruitmentSeparatePosition'
          readOnly: true
        recruitment_progress:
          type: number
          format: double
          readOnly: true
        statistics:
          allOf:
          - $ref: '#/components/schemas/RecruitmentStatistics'
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name_nb:
          type: string
          description: Name of the recruitment
          maxLength: 100
        name_en:
          type: string
          description: Name of the recruitment
          maxLength: 100
        visible_from:
          type: string
          format: date-time
          description: When it becomes visible for applicants
        actual_application_deadline:
          type: string
          format: date-time
          description: Last point an application can be sent, typically a bit after
            the shown deadline to avoid getting a lot of extra mail
        shown_application_deadline:
          type: string
          format: date-time
          description: The deadline that is shown to applicants
        reprioritization_deadline_for_applicant:
          type: string
          format: date-time
          description: Before allocation meeting
        reprioritization_deadline_for_groups:
          type: string
          format: date-time
          description: Reprioritization deadline for groups
        max_applications:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          title: Max applications per applicant
        organization:
          type: integer
          description: The organization that is recruiting
      required:
      - actual_application_deadline
      - created_at
      - created_by
      - id
      - name_en
      - name_nb
      - organization
      - recruitment_progress
      - reprioritization_deadline_for_applicant
      - reprioritization_deadline_for_groups
      - seperate_positions
      - shown_application_deadline
      - statistics
      - updated_at
      - updated_by
      - version
      - visible_from
    RecruitmentGangStat:
      type: object
      properties:
        gang:
          type: string
          readOnly: true
        application_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: Count
        applicant_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: Count
      required:
      - applicant_count
      - application_count
      - gang
    RecruitmentInterviewAvailability:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        recruitment:
          type: integer
          description: Which recruitment this availability applies to
        position:
          type: integer
          nullable: true
          description: Which position this availability applies to
        start_date:
          type: string
          format: date
          description: First possible date for interviews
        end_date:
          type: string
          format: date
          description: Last possible date for interviews
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        timeslot_interval:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: The time interval (in minutes) between each timeslot
      required:
      - end_date
      - end_time
      - recruitment
      - start_date
      - start_time
    RecruitmentPosition:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        total_applicants:
          type: integer
          readOnly: true
        processed_applicants:
          type: integer
          readOnly: true
        accepted_applicants:
          type: integer
          readOnly: true
        gang:
          allOf:
          - $ref: '#/components/schemas/Gang'
          readOnly: true
        interviewers:
          type: array
          items:
            $ref: '#/components/schemas/Interviewer'
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name_nb:
          type: string
          description: Name of the position
          maxLength: 100
        name_en:
          type: string
          description: Name of the position
          maxLength: 100
        short_description_nb:
          type: string
          description: Short description of the position
          maxLength: 100
        short_description_en:
          type: string
          nullable: true
          description: Short description of the position
          maxLength: 100
        long_description_nb:
          type: string
          description: Long description of the position
        long_description_en:
          type: string
          nullable: true
          description: Long description of the position
        is_funksjonaer_position:
          type: boolean
          description: Is this a funksjonær position?
        default_application_letter_nb:
          type: string
          description: Default application letter for the position
        default_application_letter_en:
          type: string
          nullable: true
          description: Default application letter for the position
        norwegian_applicants_only:
          type: boolean
          description: Is this position only for Norwegian applicants?
        tags:
          type: string
          description: Tags for the position
          maxLength: 100
        recruitment:
          type: integer
          nullable: true
          description: The recruitment that is recruiting
        shared_interview_group:
          type: integer
          nullable: true
          description: Shared interviewgroup for position
      required:
      - accepted_applicants
      - created_at
      - created_by
      - default_application_letter_nb
      - gang
      - id
      - interviewers
      - is_funksjonaer_position
      - long_description_nb
      - name_en
      - name_nb
      - processed_applicants
      - short_description_nb
      - tags
      - total_applicants
      - updated_at
      - updated_by
      - version
    RecruitmentPositionForApplicant:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name_nb:
          type: string
          description: Name of the position
          maxLength: 100
        name_en:
          type: string
          description: Name of the position
          maxLength: 100
        short_description_nb:
          type: string
          description: Short description of the position
          maxLength: 100
        short_description_en:
          type: string
          nullable: true
          description: Short description of the position
          maxLength: 100
        long_description_nb:
          type: string
          description: Long description of the position
        long_description_en:
          type: string
          nullable: true
          description: Long description of the position
        is_funksjonaer_position:
          type: boolean
          description: Is this a funksjonær position?
        default_application_letter_nb:
          type: string
          description: Default application letter for the position
        default_application_letter_en:
          type: string
          nullable: true
          description: Default application letter for the position
        gang:
          $ref: '#/components/schemas/Gang'
        recruitment:
          type: integer
          nullable: true
          description: The recruitment that is recruiting
      required:
      - default_application_letter_nb
      - gang
      - id
      - is_funksjonaer_position
      - long_description_nb
      - name_en
      - name_nb
      - short_description_nb
    RecruitmentSeparatePosition:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        name_nb:
          type: string
          description: Name of the position
          maxLength: 100
        name_en:
          type: string
          description: Name of the position
          maxLength: 100
        description_nb:
          type: string
          nullable: true
          description: Short description of the position (NB)
          maxLength: 100
        description_en:
          type: string
          nullable: true
          description: Short description of the position (EN)
          maxLength: 100
        url:
          type: string
          format: uri
          description: URL to website of separate recruitment
          maxLength: 200
      required:
      - name_en
      - name_nb
      - url
    RecruitmentStatistics:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        time_stats:
          type: array
          items:
            $ref: '#/components/schemas/RecruitmentTimeStat'
          readOnly: true
        date_stats:
          type: array
          items:
            $ref: '#/components/schemas/RecruitmentDateStat'
          readOnly: true
        campus_stats:
          type: array
          items:
            $ref: '#/components/schemas/RecruitmentCampusStat'
          readOnly: true
        gang_stats:
          type: array
          items:
            $ref: '#/components/schemas/RecruitmentGangStat'
          readOnly: true
        total_applicants:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        total_applications:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        recruitment:
          type: integer
          nullable: true
      required:
      - campus_stats
      - date_stats
      - gang_stats
      - id
      - time_stats
    RecruitmentTimeStat:
      type: object
      properties:
        hour:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: Time
        count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - count
      - hour
    RecruitmentUpdateUserPriority:
      type: object
      properties:
        direction:
          type: integer
          writeOnly: true
      required:
      - direction
    ReservationCheck:
      type: object
      properties:
        guest_count:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: Antall gjester
        occasion:
          $ref: '#/components/schemas/OccasionEnum'
        reservation_date:
          type: string
          format: date
          title: Dato
      required:
      - guest_count
    Saksdokument:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        url:
          type: string
          nullable: true
          readOnly: true
        file:
          type: string
          format: uri
          writeOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        title_nb:
          type: string
          nullable: true
          title: Tittel (Norsk)
          maxLength: 80
        title_en:
          type: string
          nullable: true
          title: Tittel (Engelsk)
          maxLength: 80
        publication_date:
          type: string
          format: date-time
          nullable: true
        category:
          $ref: '#/components/schemas/SaksdokumentCategoryEnum'
      required:
      - created_at
      - created_by
      - id
      - updated_at
      - updated_by
      - url
      - version
    SaksdokumentCategoryEnum:
      enum:
      - FS_REFERAT
      - STYRET
      - RADET
      - ARSBERETNINGER
      type: string
      description: |-
        * `FS_REFERAT` - FS-Referat
        * `STYRET` - Styret
        * `RADET` - Rådet
        * `ARSBERETNINGER` - Årsberetninger, regnskap og budsjettkunngjøringer
    StatusEnum:
      enum:
      - active
      - archived
      - cancelled
      - deleted
      type: string
      description: |-
        * `active` - Aktiv
        * `archived` - Arkivert
        * `cancelled` - Avlyst
        * `deleted` - Slettet
    Table:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name_nb:
          type: string
          nullable: true
          title: Navn (norsk)
          maxLength: 64
        description_nb:
          type: string
          nullable: true
          title: Beskrivelse (norsk)
          maxLength: 64
        name_en:
          type: string
          nullable: true
          title: Navn (engelsk)
          maxLength: 64
        description_en:
          type: string
          nullable: true
          title: Beskrivelse (engelsk)
          maxLength: 64
        seating:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
        venue:
          type: integer
          nullable: true
      required:
      - created_at
      - created_by
      - id
      - updated_at
      - updated_by
      - version
    Tag:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name:
          type: string
          maxLength: 140
        color:
          type: string
          nullable: true
          maxLength: 6
      required:
      - created_at
      - created_by
      - id
      - name
      - updated_at
      - updated_by
      - version
    TextItem:
      type: object
      properties:
        key:
          type: string
          maxLength: 40
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        text_nb:
          type: string
        text_en:
          type: string
        created_by:
          type: integer
          readOnly: true
          nullable: true
        updated_by:
          type: integer
          readOnly: true
          nullable: true
      required:
      - created_at
      - created_by
      - key
      - text_en
      - text_nb
      - updated_at
      - updated_by
      - version
    ThemeEnum:
      enum:
      - theme-light
      - theme-dark
      type: string
      description: |-
        * `theme-light` - Light
        * `theme-dark` - Dark
    TicketTypeEnum:
      enum:
      - included
      - free
      - billig
      - registration
      - custom
      type: string
      description: |-
        * `included` - Included with entrance
        * `free` - Free
        * `billig` - Paid
        * `registration` - Free with registration
        * `custom` - Custom
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
          readOnly: true
        profile:
          allOf:
          - $ref: '#/components/schemas/Profile'
          readOnly: true
        campus:
          allOf:
          - $ref: '#/components/schemas/Campus'
          readOnly: true
        permissions:
          type: array
          items:
            type: string
          readOnly: true
        object_permissions:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        user_preference:
          type: object
          additionalProperties: {}
          readOnly: true
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        phone_number:
          type: string
          pattern: ^\+?\s*(\d\s*){8,15}$
          maxLength: 15
        email:
          type: string
          format: email
          maxLength: 254
      required:
      - campus
      - email
      - groups
      - id
      - object_permissions
      - permissions
      - phone_number
      - profile
      - updated_at
      - user_preference
      - username
    UserFeedback:
      type: object
      properties:
        text:
          type: string
        contact_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        path:
          type: string
          maxLength: 255
        screen_resolution:
          type: string
          maxLength: 13
      required:
      - text
    UserPreference:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        theme:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ThemeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        mirror_dimension:
          type: boolean
        cursor_trail:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        user:
          type: integer
          nullable: true
      required:
      - created_at
      - id
      - updated_at
    Venue:
      type: object
      description: |-
        Base serializer, sets version fields to read_only
        Adds validation errors from models clean
        Context of request needs to be passed
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: string
          nullable: true
          readOnly: true
        updated_by:
          type: string
          nullable: true
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        name:
          type: string
          nullable: true
          maxLength: 140
        slug:
          type: string
          nullable: true
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          nullable: true
        floor:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        last_renovated:
          type: string
          format: date-time
          nullable: true
        handicapped_approved:
          type: boolean
          nullable: true
        responsible_crew:
          type: string
          nullable: true
          maxLength: 140
        opening:
          type: string
          format: time
          nullable: true
        closing:
          type: string
          format: time
          nullable: true
        opening_monday:
          type: string
          format: time
          nullable: true
        opening_tuesday:
          type: string
          format: time
          nullable: true
        opening_wednesday:
          type: string
          format: time
          nullable: true
        opening_thursday:
          type: string
          format: time
          nullable: true
        opening_friday:
          type: string
          format: time
          nullable: true
        opening_saturday:
          type: string
          format: time
          nullable: true
        opening_sunday:
          type: string
          format: time
          nullable: true
        closing_monday:
          type: string
          format: time
          nullable: true
        closing_tuesday:
          type: string
          format: time
          nullable: true
        closing_wednesday:
          type: string
          format: time
          nullable: true
        closing_thursday:
          type: string
          format: time
          nullable: true
        closing_friday:
          type: string
          format: time
          nullable: true
        closing_saturday:
          type: string
          format: time
          nullable: true
        closing_sunday:
          type: string
          format: time
          nullable: true
      required:
      - created_at
      - created_by
      - id
      - updated_at
      - updated_by
      - version
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
