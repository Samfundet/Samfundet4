[[source]]
url = "https://pypi.org/simple"
verify_ssl = true
name = "pypi"

[scripts]
# See '/docs/pipenv.md'.
# Doesn't work for powershell.
"pipenv:install" = "pipenv install"
"pipenv:update" = "pipenv update"
"pipenv:sync" = "bash -c \"pipenv clean; pipenv sync --dev\""
"pipenv:sync-prod" = "pipenv sync"
"pipenv:docker-install-dev" = "pipenv install --deploy --ignore-pipfile --dev" # 'deploy' means abort if outdated lock file. 'ignore-pipfile' means only install using the lock file. 'dev' means install dev dependencies.
"pipenv:docker-install-prod" = "pipenv install --deploy --ignore-pipfile" # 'deploy' means abort if outdated lock file. 'ignore-pipfile' means only install using the lock file.
"pipenv:outdated" = "pipenv update --outdated" # Show outdated dependencies.
"pipenv:graph" = "pipenv graph" # Show dependency graph.
"pipenv:where" = "pipenv --where" # Show location of virtual environment.
"pipenv:rm" = "pipenv --rm" # Completely remove virtual environment.
"pipenv:shell" = "pipenv shell" # Opens a shell within the virtual environment.
"ruff:check" = "pipenv run ruff check ." # Run ruff check linter on project.
"ruff:format:check" = "pipenv run ruff format --check ." # Dry-run ruff format on all files in the project.
"ruff:format:apply" = "pipenv run ruff format ." # Apply ruff format on all files in the project.
"mypy:run" = "pipenv run mypy --config-file mypy.ini ."
"migrations:make" = "pipenv run python manage.py makemigrations --noinput"
"migrations:verify" = "pipenv run python manage.py makemigrations --check --dry-run --noinput --verbosity 2"
"migrations:apply" = "pipenv run python manage.py migrate"
"static:collect" = "pipenv run python manage.py collectstatic --noinput"
"yapf:diff" = "pipenv run yapf --parallel --recursive --diff ." # Dry-run yapf on all files in the project.
"yapf:apply" = "pipenv run yapf --parallel --recursive -i ." # Applies yapf to all files in the project.
"pytest:run" = "pipenv run pytest"
"pipeline:run" = "bash -c \"pipenv run mypy:run && pipenv run yapf:diff && pipenv run migrations:verify && pipenv run pytest:run\""
"seed:run" = "pipenv run python manage.py seed"

[packages]
django = "*"
django-extensions = "*"
django-environ = "*"
djangorestframework = "*"
django-cors-headers = "*"
dataclasses-json = "*"
django-guardian = "*"
pillow = "*"
gunicorn = "*"
django-admin-autocomplete-filter = "*"
django-notifications-hq = "*"
psycopg = {extras = ["c"], version = "*"}

[dev-packages]
yapf = "*"
mypy = "*"
ruff = "*"
bandit = "*"
pillow = "*"
debugpy = "*"
requests = "*"
pytest = "*"
pytest-django = "*"

[requires]
python_version = "3.11.2" # from .python-version
